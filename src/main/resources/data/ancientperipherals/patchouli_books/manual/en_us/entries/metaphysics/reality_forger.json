{
  "name": "Reality forger",
  "icon": "ancientperipherals:reality_forger",
  "category": "advancedperipherals:metaphysics",
  "advancement": "ancientperipherals:abstractium",
  "pages": [
    {
      "type": "spotlight",
      "title": "Reality forger",
      "item": "ancientperipherals:reality_forger",
      "text": "Several experiments with abstractium showed you, that you can define how fill abstractium looks like. But result is pretty unstable by itself.$(p)Hopefully, your little automatas can help you to build machine, that will solve this problem."
    },
    {
      "type": "ancientperipherals:automata",
      "recipe": "ancientperipherals:reality_forger"
    },
    {
      "type": "text",
      "text": "However, reality forger cannot interact with reality directly, it can only control prepared area.$(p)Seems, you need to setup some flexible reality anchor and then change their appearance via lua methods.$(p)Take a note, that forger interaction area is limited. You can get exact interaction radius via $(configuration)."
    },
    {
      "type": "ancientperipherals:automata",
      "recipe": "ancientperipherals:flexible_reality_anchor"
    },
    {
      "type": "ancientperipherals:lua_function_left_page",
      "functionName": "detectAnchors",
      "description": "Search for flexible reality anchors around reality forger"
    },
    {
      "type": "ancientperipherals:lua_function_right_page",
      "returns": [
        ["{$(blockPos)}", "list of anchor positions"]
      ]
    },
    {
      "type": "ancientperipherals:lua_function_left_page",
      "functionName": "forgeRealityPiece",
      "description": "Change visual appearance for single reality anchor",
      "throw": [
        "incorrect parameters format"
      ]
    },
    {
      "type": "ancientperipherals:lua_function_right_page",
      "parameters": [
        ["$(blockPos)", "target anchor"],
        ["$(blockVisual)", "block visual parameters to be changed, parameters that are missed will left unchanged"]
      ],
      "returns": [
        ["boolean", "If operation successful"],
        ["nil | string", "error message"]
      ]
    },
    {
      "type": "ancientperipherals:lua_function_left_page",
      "functionName": "forgeRealityPieces",
      "description": "Change visual appearance for several reality anchor",
      "throw": [
        "incorrect parameters format"
      ]
    },
    {
      "type": "ancientperipherals:lua_function_right_page",
      "parameters": [
        ["{$(blockPos)}", "list of target anchors"],
        ["$(blockVisual)", "block visual parameters to be changed, parameters that are missed will left unchanged"]
      ],
      "returns": [
        ["boolean", "If operation successful"],
        ["nil | string", "error message"]
      ]
    },
    {
      "type": "ancientperipherals:lua_function_left_page",
      "functionName": "forgeReality",
      "description": "Change visual appearance for all available reality anchors",
      "throw": [
        "incorrect parameters format"
      ]
    },
    {
      "type": "ancientperipherals:lua_function_right_page",
      "parameters": [
        ["$(blockVisual)", "block visual parameters to be changed, parameters that are missed will left unchanged"]
      ],
      "returns": [
        ["boolean", "If operation successful"],
        ["nil | string", "error message"]
      ]
    },
    {
      "type": "ancientperipherals:lua_function",
      "functionName": "getInteractionRadius",
      "description": "Utility function for better limitation understanding",
      "returns": [
        ["number", "max interaction radius"]
      ]
    }
  ]
}
